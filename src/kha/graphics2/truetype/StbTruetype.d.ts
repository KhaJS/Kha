import {default as HaxeError} from "./../../../js/_Boot/HaxeError";
import {default as HxOverrides} from "./../../../HxOverrides";
import {default as Stbtt_vertex} from "./../../../kha/graphics2/truetype/Stbtt_vertex";
import {default as Std} from "./../../../Std";
import {default as Stbtt_temp_glyph_h_metrics} from "./../../../kha/graphics2/truetype/Stbtt_temp_glyph_h_metrics";
import {default as Stbtt_temp_font_v_metrics} from "./../../../kha/graphics2/truetype/Stbtt_temp_font_v_metrics";
import {default as Stbtt_temp_rect} from "./../../../kha/graphics2/truetype/Stbtt_temp_rect";
import {default as Stbtt__active_edge} from "./../../../kha/graphics2/truetype/Stbtt__active_edge";
import {default as Stbtt__edge} from "./../../../kha/graphics2/truetype/Stbtt__edge";
import {default as Stbtt__point} from "./../../../kha/graphics2/truetype/Stbtt__point";
import {default as VectorOfIntPointer} from "./../../../kha/graphics2/truetype/VectorOfIntPointer";
import {default as Stbtt__bitmap} from "./../../../kha/graphics2/truetype/Stbtt__bitmap";
import {default as BytesBlob} from "./../../../kha/internal/BytesBlob";
import {default as Stbtt_fontinfo} from "./../../../kha/graphics2/truetype/Stbtt_fontinfo";
import * as khaModule from 'kha';

declare namespace kha.graphics2.truetype {

export class StbTruetype {

	static STBTT_assert(value:boolean):void;
	static STBTT_POINT_SIZE(x:number):number;
	static STBTT_vmove:number;
	static STBTT_vline:number;
	static STBTT_vcurve:number;
	static STBTT_MACSTYLE_DONTCARE:number;
	static STBTT_MACSTYLE_BOLD:number;
	static STBTT_MACSTYLE_ITALIC:number;
	static STBTT_MACSTYLE_UNDERSCORE:number;
	static STBTT_MACSTYLE_NONE:number;
	static STBTT_PLATFORM_ID_UNICODE:number;
	static STBTT_PLATFORM_ID_MAC:number;
	static STBTT_PLATFORM_ID_ISO:number;
	static STBTT_PLATFORM_ID_MICROSOFT:number;
	static STBTT_UNICODE_EID_UNICODE_1_0:number;
	static STBTT_UNICODE_EID_UNICODE_1_1:number;
	static STBTT_UNICODE_EID_ISO_10646:number;
	static STBTT_UNICODE_EID_UNICODE_2_0_BMP:number;
	static STBTT_UNICODE_EID_UNICODE_2_0_FULL:number;
	static STBTT_MS_EID_SYMBOL:number;
	static STBTT_MS_EID_UNICODE_BMP:number;
	static STBTT_MS_EID_SHIFTJIS:number;
	static STBTT_MS_EID_UNICODE_FULL:number;
	static STBTT_MAC_EID_ROMAN:number;
	static STBTT_MAC_EID_ARABIC:number;
	static STBTT_MAC_EID_JAPANESE:number;
	static STBTT_MAC_EID_HEBREW:number;
	static STBTT_MAC_EID_CHINESE_TRAD:number;
	static STBTT_MAC_EID_GREEK:number;
	static STBTT_MAC_EID_KOREAN:number;
	static STBTT_MAC_EID_RUSSIAN:number;
	static STBTT_MS_LANG_ENGLISH:number;
	static STBTT_MS_LANG_ITALIAN:number;
	static STBTT_MS_LANG_CHINESE:number;
	static STBTT_MS_LANG_JAPANESE:number;
	static STBTT_MS_LANG_DUTCH:number;
	static STBTT_MS_LANG_KOREAN:number;
	static STBTT_MS_LANG_FRENCH:number;
	static STBTT_MS_LANG_RUSSIAN:number;
	static STBTT_MS_LANG_GERMAN:number;
	static STBTT_MS_LANG_SPANISH:number;
	static STBTT_MS_LANG_HEBREW:number;
	static STBTT_MS_LANG_SWEDISH:number;
	static STBTT_MAC_LANG_ENGLISH:number;
	static STBTT_MAC_LANG_JAPANESE:number;
	static STBTT_MAC_LANG_ARABIC:number;
	static STBTT_MAC_LANG_KOREAN:number;
	static STBTT_MAC_LANG_DUTCH:number;
	static STBTT_MAC_LANG_RUSSIAN:number;
	static STBTT_MAC_LANG_FRENCH:number;
	static STBTT_MAC_LANG_SPANISH:number;
	static STBTT_MAC_LANG_GERMAN:number;
	static STBTT_MAC_LANG_SWEDISH:number;
	static STBTT_MAC_LANG_HEBREW:number;
	static STBTT_MAC_LANG_CHINESE_SIMPLIFIED:number;
	static STBTT_MAC_LANG_ITALIAN:number;
	static STBTT_MAC_LANG_CHINESE_TRAD:number;
	static STBTT_MAX_OVERSAMPLE:number;
	static STBTT_RASTERIZER_VERSION:number;
	static ttBYTE(p:Blob, pos?:number):khaModule.graphics2.truetype.Stbtt_uint8;
	static ttCHAR(p:Blob, pos?:number):khaModule.graphics2.truetype.Stbtt_int8;
	static ttUSHORT(p:Blob, pos?:number):khaModule.graphics2.truetype.Stbtt_uint16;
	static ttSHORT(p:Blob, pos?:number):khaModule.graphics2.truetype.Stbtt_int16;
	static ttULONG(p:Blob, pos?:number):khaModule.graphics2.truetype.Stbtt_uint32;
	static ttLONG(p:Blob, pos?:number):khaModule.graphics2.truetype.Stbtt_int32;
	static ttFixed(p:Blob, pos?:number):khaModule.graphics2.truetype.Stbtt_int32;
	static stbtt_tag4(p:Blob, pos:number, c0:number, c1:number, c2:number, c3:number):boolean;
	static stbtt_tag(p:Blob, pos:number, str:string):boolean;
	static stbtt__isfont(font:Blob):boolean;
	static stbtt__find_table(data:Blob, fontstart:khaModule.graphics2.truetype.Stbtt_uint32, tag:string):khaModule.graphics2.truetype.Stbtt_uint32;
	static stbtt_GetFontOffsetForIndex(font_collection:Blob, index:number):number;
	static stbtt_InitFont(info:Stbtt_fontinfo, data:Blob, fontstart:number):boolean;
	static stbtt_FindGlyphIndex(info:Stbtt_fontinfo, unicode_codepoint:number):number;
	static stbtt_GetCodepointShape(info:Stbtt_fontinfo, unicode_codepoint:number):Vector;
	static stbtt_setvertex(v:Stbtt_vertex, type:khaModule.graphics2.truetype.Stbtt_uint8, x:khaModule.graphics2.truetype.Stbtt_int32, y:khaModule.graphics2.truetype.Stbtt_int32, cx:khaModule.graphics2.truetype.Stbtt_int32, cy:khaModule.graphics2.truetype.Stbtt_int32):void;
	static stbtt__GetGlyfOffset(info:Stbtt_fontinfo, glyph_index:number):number;
	static stbtt_GetGlyphBox(info:Stbtt_fontinfo, glyph_index:number, rect:Stbtt_temp_rect):boolean;
	static stbtt_GetCodepointBox(info:Stbtt_fontinfo, codepoint:number, rect:Stbtt_temp_rect):boolean;
	static stbtt_IsGlyphEmpty(info:Stbtt_fontinfo, glyph_index:number):boolean;
	static stbtt__close_shape(vertices:Vector, num_vertices:number, was_off:boolean, start_off:boolean, sx:khaModule.graphics2.truetype.Stbtt_int32, sy:khaModule.graphics2.truetype.Stbtt_int32, scx:khaModule.graphics2.truetype.Stbtt_int32, scy:khaModule.graphics2.truetype.Stbtt_int32, cx:khaModule.graphics2.truetype.Stbtt_int32, cy:khaModule.graphics2.truetype.Stbtt_int32):number;
	static copyVertices(from:Vector, to:Vector, offset:number, count:number):void;
	static stbtt_GetGlyphShape(info:Stbtt_fontinfo, glyph_index:number):Vector;
	static stbtt_GetGlyphHMetrics(info:Stbtt_fontinfo, glyph_index:number):Stbtt_temp_glyph_h_metrics;
	static stbtt_GetGlyphKernAdvance(info:Stbtt_fontinfo, glyph1:number, glyph2:number):number;
	static stbtt_GetCodepointKernAdvance(info:Stbtt_fontinfo, ch1:number, ch2:number):number;
	static stbtt_GetCodepointHMetrics(info:Stbtt_fontinfo, codepoint:number):Stbtt_temp_glyph_h_metrics;
	static stbtt_GetFontVMetrics(info:Stbtt_fontinfo):Stbtt_temp_font_v_metrics;
	static stbtt_GetFontBoundingBox(info:Stbtt_fontinfo):Stbtt_temp_rect;
	static stbtt_ScaleForPixelHeight(info:Stbtt_fontinfo, height:number):number;
	static stbtt_ScaleForMappingEmToPixels(info:Stbtt_fontinfo, pixels:number):number;
	static stbtt_GetGlyphBitmapBoxSubpixel(font:Stbtt_fontinfo, glyph:number, scale_x:number, scale_y:number, shift_x:number, shift_y:number):Stbtt_temp_rect;
	static stbtt_GetGlyphBitmapBox(font:Stbtt_fontinfo, glyph:number, scale_x:number, scale_y:number):Stbtt_temp_rect;
	static stbtt_GetCodepointBitmapBoxSubpixel(font:Stbtt_fontinfo, codepoint:number, scale_x:number, scale_y:number, shift_x:number, shift_y:number):Stbtt_temp_rect;
	static stbtt_GetCodepointBitmapBox(font:Stbtt_fontinfo, codepoint:number, scale_x:number, scale_y:number):Stbtt_temp_rect;
	static stbtt__new_active(e:Vector, eIndex:number, off_x:number, start_point:number):Stbtt__active_edge;
	static stbtt__handle_clipped_edge(scanline:Vector, scanlineIndex:number, x:number, e:Stbtt__active_edge, x0:number, y0:number, x1:number, y1:number):void;
	static stbtt__fill_active_edges_new(scanline:Vector, scanline_fill:Vector, scanline_fillIndex:number, len:number, e:Stbtt__active_edge, y_top:number):void;
	static stbtt__rasterize_sorted_edges(result:Stbtt__bitmap, e:Vector, n:number, vsubsample:number, off_x:number, off_y:number):void;
	static STBTT__COMPARE(a:Stbtt__edge, b:Stbtt__edge):boolean;
	static stbtt__sort_edges_ins_sort(p:Vector, n:number):void;
	static stbtt__sort_edges_quicksort(p:Vector, pIndex:number, n:number):void;
	static stbtt__sort_edges(p:Vector, n:number):void;
	static stbtt__rasterize(result:Stbtt__bitmap, pts:Vector, wcount:Vector, windings:number, scale_x:number, scale_y:number, shift_x:number, shift_y:number, off_x:number, off_y:number, invert:boolean):void;
	static stbtt__add_point(points:Vector, n:number, x:number, y:number):void;
	static stbtt__tesselate_curve(points:Vector, num_points:any, x0:number, y0:number, x1:number, y1:number, x2:number, y2:number, objspace_flatness_squared:number, n:number):number;
	static stbtt_FlattenCurves(vertices:Vector, num_verts:number, objspace_flatness:number, contour_lengths:VectorOfIntPointer, num_contours:any):Vector;
	static stbtt_Rasterize(result:Stbtt__bitmap, flatness_in_pixels:number, vertices:Vector, num_verts:number, scale_x:number, scale_y:number, shift_x:number, shift_y:number, x_off:number, y_off:number, invert:boolean):void;
	static stbtt_GetGlyphBitmapSubpixel(info:Stbtt_fontinfo, scale_x:number, scale_y:number, shift_x:number, shift_y:number, glyph:number, region:khaModule.graphics2.truetype.Stbtt_temp_region):Blob;
	static stbtt_GetGlyphBitmap(info:Stbtt_fontinfo, scale_x:number, scale_y:number, glyph:number, region:khaModule.graphics2.truetype.Stbtt_temp_region):Blob;
	static stbtt_MakeGlyphBitmapSubpixel(info:Stbtt_fontinfo, output:Blob, output_offset:number, out_w:number, out_h:number, out_stride:number, scale_x:number, scale_y:number, shift_x:number, shift_y:number, glyph:number):void;
	static stbtt_MakeGlyphBitmap(info:Stbtt_fontinfo, output:Blob, output_offset:number, out_w:number, out_h:number, out_stride:number, scale_x:number, scale_y:number, glyph:number):void;
	static stbtt_GetCodepointBitmapSubpixel(info:Stbtt_fontinfo, scale_x:number, scale_y:number, shift_x:number, shift_y:number, codepoint:number, region:khaModule.graphics2.truetype.Stbtt_temp_region):Blob;
	static stbtt_MakeCodepointBitmapSubpixel(info:Stbtt_fontinfo, output:Blob, output_offset:number, out_w:number, out_h:number, out_stride:number, scale_x:number, scale_y:number, shift_x:number, shift_y:number, codepoint:number):void;
	static stbtt_GetCodepointBitmap(info:Stbtt_fontinfo, scale_x:number, scale_y:number, codepoint:number, region:khaModule.graphics2.truetype.Stbtt_temp_region):Blob;
	static stbtt_MakeCodepointBitmap(info:Stbtt_fontinfo, output:Blob, output_offset:number, out_w:number, out_h:number, out_stride:number, scale_x:number, scale_y:number, codepoint:number):void;
	static stbtt_BakeFontBitmap(data:Blob, offset:number, pixel_height:number, pixels:Blob, pw:number, ph:number, chars:Array<any>, chardata:Vector):number;
	static stbtt_GetBakedQuad(chardata:Vector, pw:number, ph:number, char_index:number, xpos:any, ypos:any, q:khaModule.graphics2.truetype.Stbtt_aligned_quad, opengl_fillrule:boolean):void;


}

}

export default kha.graphics2.truetype.StbTruetype;